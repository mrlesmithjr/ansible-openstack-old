[DEFAULT]
dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
force_dhcp_release=True
libvirt_use_virtio_for_bridges=True
verbose=True
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
enabled_apis=ec2,osapi_compute,metadata

{% if inventory_hostname in groups['openstack-compute-nodes'] %}
rpc_backend=rabbit
auth_strategy=keystone
my_ip={{ openstack_nova_my_ip }}
vnc_enabled=True
{% if openstack_services_vip is defined %}
vncserver_listen=0.0.0.0
{% endif %}
{% if openstack_services_vip is not defined %}
vncserver_listen={{ openstack_nova_my_ip }}
{% endif %}
vncserver_proxyclient_address={{ openstack_nova_my_ip }}
novncproxy_base_url=http://{{ openstack_services_vip }}:6080/vnc_auto.html
vif_plugging_timeout=10
vif_plugging_is_fatal=False
{%   if openstack_networking is defined and openstack_networking == "neutron" %}
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
{%   endif %}
{% endif %}

{% if inventory_hostname in groups['openstack-controller-nodes'] %}
rpc_backend=rabbit
auth_strategy=keystone
my_ip={{ openstack_nova_my_ip }}
{% if openstack_services_vip is defined %}
vncserver_listen=0.0.0.0
vncserver_proxyclient_address={{ openstack_services_vip }}
{% endif %}
{% if openstack_services_vip is not defined %}
vncserver_listen={{ openstack_nova_my_ip }}
vncserver_proxyclient_address={{ openstack_nova_my_ip }}
{% endif %}
{%   if openstack_networking is defined and openstack_networking == "neutron" %}
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
{%   endif %}
{% endif %}

[database]
{% if inventory_hostname in groups['openstack-controller-nodes'] %}
connection=mysql://nova:{{ openstack_nova_dbpass }}@{{ openstack_nova_dbhost }}/nova
{% endif %}

[glance]
{% if inventory_hostname in groups['openstack-compute-nodes'] %}
host={{ openstack_glance_dbhost }}
{% endif %}

{% if inventory_hostname in groups['openstack-controller-nodes'] %}
host={{ openstack_glance_dbhost }}
{% endif %}

[keystone_authtoken]
{% if inventory_hostname in groups['openstack-compute-nodes'] %}
auth_uri={{ openstack_keystone_url }}:5000
auth_url={{ openstack_keystone_url }}:35357
auth_plugin=password
project_domain_id=default
user_domain_id=default
project_name=service
username=nova
password={{ openstack_nova_pass }}
{% endif %}

{% if inventory_hostname in groups['openstack-controller-nodes'] %}
auth_uri={{ openstack_keystone_url }}:5000
auth_url={{ openstack_keystone_url }}:35357
auth_plugin=password
project_domain_id=default
user_domain_id=default
project_name=service
username=nova
password={{ openstack_nova_pass }}
{% endif %}

[neutron]
{% if inventory_hostname in groups['openstack-controller-nodes'] %}
{%   if openstack_networking is defined and openstack_networking == "neutron" %}
url = {{ openstack_keystone_url }}:9696
auth_strategy = keystone
admin_auth_url = {{ openstack_keystone_url }}:35357/v2.0
admin_tenant_name = service
admin_username = neutron
admin_password = {{ openstack_neutron_pass }}
{%   endif %}
{% endif %}

{% if inventory_hostname in groups['openstack-compute-nodes'] %}
{%   if openstack_networking is defined and openstack_networking == "neutron" %}
url = {{ openstack_keystone_url }}:9696
auth_strategy = keystone
admin_auth_url = {{ openstack_keystone_url }}:35357/v2.0
admin_tenant_name = service
admin_username = neutron
admin_password = {{ openstack_neutron_pass }}
{%   endif %}
{% endif %}

{% if inventory_hostname in groups['openstack-controller-nodes'] %}
service_metadata_proxy = True
metadata_proxy_shared_secret = {{ openstack_metadata_secret }}
{% endif %}

[oslo_concurrency]
{% if inventory_hostname in groups['openstack-compute-nodes'] %}
lock_path=/var/lib/nova/tmp
{% endif %}

{% if inventory_hostname in groups['openstack-controller-nodes'] %}
lock_path=/var/lib/nova/tmp
{% endif %}

[oslo_messaging_rabbit]
{% if inventory_hostname in groups['openstack-compute-nodes'] %}
rabbit_host={{ openstack_rabbit_host }}
rabbit_userid={{ openstack_rabbit_user }}
rabbit_password={{ openstack_rabbit_pass }}
{% endif %}

{% if inventory_hostname in groups['openstack-controller-nodes'] %}
rabbit_host={{ openstack_rabbit_host }}
rabbit_userid={{ openstack_rabbit_user }}
rabbit_password={{ openstack_rabbit_pass }}
{% endif %}
