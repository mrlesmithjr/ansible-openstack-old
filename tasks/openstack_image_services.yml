---
- name: openstack_image_services | creating Glance DB
  mysql_db:
    name: glance
    state: present

- name: openstack_image_services | granting permissions to Glance DB
  mysql_user:
    name: glance
    password: "{{ openstack_glance_dbpass }}"
    priv: "glance.*:ALL"
    host: "{{ item }}"
    state: present
  with_items:
    - localhost
    - '%'

- name: openstack_image_services | installing packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - glance
    - python-glanceclient

- name: openstack_image_services | configuring glance-api
  template:
    src: etc/glance/glance-api.conf.j2
    dest: /etc/glance/glance-api.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart glance-api

- name: openstack_image_services | configuring glance-registry
  template:
    src: etc/glance/glance-registry.conf.j2
    dest: /etc/glance/glance-registry.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart glance-registry

- name: openstack_image_services | checking if glance has been populated
  stat:
    path: /etc/glance/glance_populated
  register: glance_is_populated

- name: openstack_image_services | populating glance
  command: su -s /bin/sh -c "glance-manage db_sync" glance
  register: glance_populated
  when: not glance_is_populated.stat.exists

- name: openstack_image_services | marking glance as populated
  file:
    path: /etc/glance/glance_populated
    state: touch
  when: glance_populated.changed

- name: openstack_image_services | removing glance sqlite db
  file:
    path: /var/lib/glance/glance.sqlite
    state: absent

#- name: openstack_image_services | downloading Cirros Cloud Image
#  get_url:
#    url: http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
#    dest: ./cirros-0.3.4-x86_64-disk.img
#  delegate_to: localhost
#  sudo: false
