---
# Sets up and configures identity services for OpenStack
# http://docs.openstack.org/juno/install-guide/install/apt/content/ch_keystone.html
- name: openstack_identity_services | creating Keystone DB
  mysql_db:
    name: keystone
    state: present

- name: openstack_identity_services | granting permissions to Keystone DB
  mysql_user:
    name: keystone
    password: "{{ openstack_keystone_dbpass }}"
    priv: "keystone.*:ALL"
    host: "{{ item }}"
    state: present
  with_items:
    - localhost
    - '%'

- name: openstack_identity_services | installing keystone packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - keystone
    - python-keystoneclient

- name: openstack_identity_services | configuring keystone
  template:
    src: etc/keystone/keystone.conf.j2
    dest: /etc/keystone/keystone.conf
    owner: root
    group: root
    mode: 0644

- name: openstack_identity_services | checking if keystone has been populated
  stat:
    path: /etc/keystone/keystone_populated
  register: keystone_is_populated

- name: openstack_identity_services | populating keystone
  command: su -s /bin/sh -c "keystone-manage db_sync" keystone
  register: keystone_populated
  when: not keystone_is_populated.stat.exists

- name: openstack_identity_services | marking keystone as populated
  file:
    path: /etc/keystone/keystone_populated
    state: touch
  when: keystone_populated.changed

- name: openstack_identity_services | restarting keystone
  service:
    name: keystone
    state: restarted
  when: keystone_populated.changed

- name: openstack_identity_services | removing sqlite db
  file:
    path: /var/lib/keystone/keystone.db
    state: absent

- name: openstack_identity_services | creating cron job to clean expired tokens
  cron:
    name: "keystone token flush"
    special_time: hourly
    user: keystone
    job: "/usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1"
    state: present
    cron_file: keystone_token_flush

- name: openstack_identity_services | creating tenants
  keystone_user:
    tenant: "{{ item.name }}"
    tenant_description: "{{ item.description }}"
    token: "{{ openstack_keystone_temp_admin_token }}"
    state: present
  with_items: openstack_keystone_tenants

- name: openstack_identity_services | creating users
  keystone_user:
    user: "{{ item.name }}"
    password: "{{ item.password }}"
    email: "{{ item.email|default('nobody@localhost') }}"
    tenant: "{{ item.tenant }}"
    token: "{{ openstack_keystone_temp_admin_token }}"
    state: present
  with_items: openstack_keystone_users

- name: openstack_identity_services | assigning user roles for tenants
  keystone_user:
    user: "{{ item.user }}"
    tenant: "{{ item.tenant }}"
    role: "{{ item.name }}"
    token: "{{ openstack_keystone_temp_admin_token }}"
    state: present
  with_items: openstack_keystone_roles

- name: openstack_identity_services | creating keystone services
  keystone_service:
    name: "{{ item.name }}"
    service_type: "{{ item.service_type }}"
    description: "{{ item.description|default('Not provided') }}"
    token: "{{ openstack_keystone_temp_admin_token }}"
    state: present
  with_items: openstack_keystone_services

- name: openstack_identity_services | creating keystone endpoints
  keystone_endpoint:
    service_name: "{{ item.service_name }}"
    region: "{{ item.region|default(openstack_keystone_default_region) }}"
    public_url: "{{ item.public_url }}"
    internal_url: "{{ item.internal_url }}"
    admin_url: "{{ item.admin_url }}"
    token: "{{ openstack_keystone_temp_admin_token }}"
    state: present
  with_items: openstack_keystone_endpoints
